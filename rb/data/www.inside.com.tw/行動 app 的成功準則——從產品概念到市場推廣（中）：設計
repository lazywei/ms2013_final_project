
原文是 〈 How To Succeed With Your Mobile App 〉，作者 Jeremy Olson 是 Tapity 創辦人。本篇譯文來自 Be For Web，作者是 c7210，一位 UX 玩家、互動設計師、iOS 開發菜鳥、貓奴、guitar fucker。
此為系列文章第二篇，前一篇是 〈 行動 app 的成功準則——從產品概念到市場推廣（上）：產品概念 〉
設計
設計是蘋果文化當中極其關鍵的組成要素；它對一個 app 能否取得成功有決定性的作用是不言可喻的。
別讓我思考（Don't Make Me Think）
和網站服務相似，大部分行動 app 對使用者來說都是隨需隨用的。使用者總是缺乏耐心，如果一個 app 不能在開啟後立刻展示出自身的功能特色及使用方法，使用者很有可能放棄使用。本小節的標題引用了 Steve Krug 的書名，這也正是我們想要表達的：別讓使用者思考；好的界面應該像門把那樣簡單易懂。
返璞歸真
每一個功能都會不可避免地增加 app 的複雜度，哪怕這個功能再酷。試著剝除產品中與核心價值無關的一切元素，讓應用呈現出它最本質、最精華的面貌。
看看下面的截圖，同樣是待辦事項類的 app ，左側的產品中充斥著各種所謂很「酷」的功能，實際上已經影響了核心功能的體驗；而大獲成功的 Clear 則是如此的簡潔直白，所見即是精華。

推薦閱讀：iOS 使用者體驗解析
考慮使用者習慣及界面設計規範
使用者會根據固有的使用經驗對應用的各類界面元素建立一套行為預期。記得學習不同平台的界面設計規範（iOS 人機界面設計規范、Android 界面設計規範)，在做出突破和創新之前先了解一下最基本的互動和視覺設計規則。
對比下圖當中的兩款同類產品（幫助學生查看學分），左側的 app 為了追求獨特的互動與視覺風格，刻意忽略掉最基本也是最符合使用者習慣的導航及輸入機制；右側的 app（我的 Grades）則是根據 iOS 的標準方式做了適度的客製化，表現出獨特的風格，同時也符合使用者的使用習慣。

推薦閱讀：先了解規則，再尋求創新 -- 關於 iOS app 界面客製化
像人類一樣思考
身為正常的人類，使用者會在頭腦中對現實世界當中各種事物的運作法則建模。設計方案要符合人們對現實世界的認知，而不是被各種技術或資料庫解決方案局限。
以條碼掃描 app RedLaser 為例。在最初的版本中，使用者在對準條碼後必須點擊拍攝按鈕才能獲取訊息，這顯然不符合真實的條碼掃描器的工作方式。還好，他們後來有想到這點並做了改進。

讓使用者少做點事
使用者都比較懶，他們不喜歡閱讀使用說明、不喜歡打字、不喜歡反覆操作。好的產品應該將需要使用者執行的操作量降低到最小程度。

Tripit 其實是一款不錯的應用，不過它在開啟之後需要使用者首先註冊，而這個界面本身沒有為使用者提供太多的「動力」去做這件事。如果一個產品可以在不註冊登入的情況下使用，那麼可以試著先讓使用者玩玩看，到了真正有需要的步驟再註冊也不晚。另外，也可以像上圖右側的 TuneWiki 那樣，先讓使用者了解成為註冊使用者的各種好處，用這種方式誘導使用者自動產生註冊的願望。
相關閱讀：具有引導性的行動 app 界面設計模式
進行可用性測試
不要被各種專有名詞嚇到，事情沒那麼負責，盡量做你能做的拔。哪怕只是將交互稿或UI稿拿給潛在使用者看一看，也能從中發現一些基本的可用性問題。問問對方對這款應用的理解，設定幾個典型任務，讓他們將自己的各種想法通過語言表述出來，觀察他們對界面的反應。記得在設計流程當中盡量早盡量多的做些這樣的測試，哪怕僅僅是非正式的，也會對產品的功能及使用者體驗設計產生重要的推動作用。
相關閱讀：產品早期的原型設計與使用者測試
將情感引入產品
Weightbox 中滑動面板的動畫效果、Everyday 裡的幽默文案、在 Clear 裡完成一件事之後那令人倍感滿足的排序效果…… 這些小細節本身並不具備任何實際的功能，卻可以在使用者心中引發強大的情感共鳴。蘊藏這些細節的產品是具有「人格」的，你可以喜歡它，也可以討厭它，但你多半會因為這些有意思的細節而記住它。
如今，「可用性」已經不再是產品使用者體驗這個概念當中唯一的組成要素了。要使 app 獲得成功，你必須在「愉悅性」方面花更多的心思。
視覺效果
看上去漂亮、用起來帶感的 app 通常會賣的更好，而且會讓使用者覺得物超所值。「漂亮」不只存在於豐富的漸變、紋理和陰影當中，簡潔雅致、可讀性強的界面布局同樣可以給人帶來美的享受。對於「擬物化」的視覺風格，盡量只在能夠強化體驗的地方使用，不要為了追求獨特的視覺效果而使界面元素反而成為干擾因素。

音效
音效在使用者界面的表現方式當中屬於一種微妙而有力的、尚未被廣泛使用的工具。不妨試著在一些互動過程將音效融入切換動畫效果中，給使用者帶來更飽滿、更愉悅的體驗。

觸控的魔力
蘋果的設計師和工程師們會將產品打造的盡善盡美，所以我們能夠在 iOS 當中感受到光滑的像上了油一樣的彈跳滾動效果。如果界面中的互動元素不能立刻對觸控行為做出回應，那麼就算不上是真正的直接操作 。

觸控手勢可以在使用者與應用界面之間建立強有力的關聯，不過一旦運用不當，譬如對於使用者來說難以發現或掌握，那麼手勢也會造成非常差勁、甚至是令人沮喪的互動 體驗。你可以盡情嘗試新的互動模式，但最終一定要確保每個操作、每個切換效果和視覺隱喻都是易懂易用、符合直覺。
文案當中的人情味兒
使用者不喜歡帶有說教性質的使用說明、錯誤警告訊息或系統提示。你完全可以嘗試一些詼諧幽默甚至略顯狡黠的文案風格，使用者會喜歡這些意想不到的樂趣。如果你做的夠有趣，人們甚至會在 Twitter 上談論起來。

出眾的動畫效果
無論是互動元件在界面當中移動，還是界面之間的切換，動畫效果都可以體現出產品的個性，讓使用者充分享受連貫平滑的交互體驗。

不要忽視 icon
app 的 icon 在可說是產品的門面，多數使用者都是透過 icon 對你的 app 產生第一印象，而且在 app 被安裝到裝置上之後，它就是 app 的入口。優秀的 icon 通常簡單而令人印象深刻，它們身上沒有過分絢麗的雕琢，卻能從容的脫穎而出。

對比上圖中的兩個 icon，左側（Clear）的使用了明亮的配色、簡單的形狀搭配，而右側的 icon，無論配色還是形狀都具有強烈的衝突感，整體缺乏吸引力，縮小之後更是難以辨識。
推薦閱讀：為產品賦予人格 -- 情感化設計的組成要素及實踐案例
開發
對技術方案的選擇同樣會影響著最終的產品體驗，進而決定 app 能否取得成功。
原生開發
「一次開發，多處部署」的理念對於中小型 app 來說未必適用，除了遊戲。某種程度上來說，這種理念被太多人給神話了，畢竟不同的系統平台有著不同的互動模式及 UI 設計規範。最終「跨平台」的結果很可能就是在任何一個系統都無法讓使用者得到良好的體驗。

Facebook 在過去幾年中嘗試了 HTML5 的混合型 app。但自從最近改為 iOS 原生 app 之後，性能提升了 200%，產品的使用者評價也很快從 2 星升至 4 星。
不過，採用混合型 app 的技術方案也未必代表失敗，Zipcar 就是一個不錯的範例。要用這種方式成功，有幾個問題必須考慮：
「一次開發，多處部署」的理念會對設計工作造成不小的局限。因為要照顧到所有目標平台，所以設計當中不能有任何針對某個特定系統的解決方案。
混合型 app 或 web app 所根據的仍是 web 前端開發技術，本質上仍有比較明顯的性能問題。
混合型 app 或 web app 缺乏原生 app 的靈活性，通常情況下無法呼叫或利用硬體本身具備的各種自動化功能。
關於移動化策略及技術方案對比等方面的話題，推薦各位繼續深入閱讀：
走出行動網路的迷宮 -- 網站行動化的方法策略
設計師應該了解的 iOS app 開發基礎知識
前端開發者的跨平台行動 app 開發策略及工具
隨「機」應變的使用者體驗設計
程式碼品質的重要性
結構合理、規劃清晰、擴充性強的程式碼不會直接影響使用者感受，但是對產品的後續發展卻有重要的基礎作用。
反之，差勁的程式碼通常會直接影響產品的體驗。使用者不關心 app 為什麼會當掉，不關心到底是什麼原因導致輸入的內容遺失，他們會把所有的問題都歸咎到產品和品牌。
在技術開發的人力資源方面，即使你剛剛起步，也不要覺得隨便找個普通的開發者按小時計費比較划算。在同樣的時間裡，一個普通的程式設計師也許可以馬馬虎虎的寫出一個功能模組，而一名優秀的程式設計師則可能產出三個更強大的模組。一旦你決定更換那個普通的程式設計師，那麼繼任者很有可能得花很多時間了解之前的程式碼，甚至需要重新來過；而經驗豐富的開發人員寫出的程式碼通常有更高的再利用價值。
 
>> 〈 行動 app 的成功準則——從產品概念到市場推廣（下） 〉
 

