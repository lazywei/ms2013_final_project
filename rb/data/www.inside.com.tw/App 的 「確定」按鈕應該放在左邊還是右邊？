
作者是 MoonMonster，百度無線使用者體驗部互動設計師，現任上海 MUX 負責人。本文〈在 App 裡，「確定」按鈕應該放在左邊還是右邊？〉 轉載自他的部落格「MoonMonster」。
--
iOS 說，「I'm always right」，於是「確定」就在了右邊。Android 倔強的說，「要在左邊」，於是「確定」就在了左邊。
接著，iOS 把 Android 揍了一頓，「stay foolish，foolish…… 都要在右邊」，Android 被硬拗到了右邊。
這是個老話題了，只是隨著時間的推移，各平台都在更新，我們也要與時俱進，有必要再拿出來提一提。
三大行動平台：Android、iOS 和 Windows Phone（下文簡稱 WP），我們一個一個說。
Windows Phone
先從 WP 開始吧，WP 平台內的彈出提示稱之為「raw notifications」，延續 Windowsdows 桌面平台的設計原則。
圖 1
如圖 1 所示，dialog（對話框）內操作按鍵稱為「Commit button」，代表「肯定」的操作位於左邊，「否定」位於最右邊。Windows 平台定義了具體的用法與順序：Yes/No、Yes/No/Cancel、[Do it]/Cancel、[Do it]/[Don't do it]、[Do it]/[Don't do it]/Cancel。（可參考這裡，注意 OK 鍵沒有在此間出沒，後面具體說明。
圖 2
WP 平台及 Windows 8 平台 dialog 內操作按鍵的左右順序也是一致的（圖2）。
iOS
iOS 平台，它的出身和歷史註定了與 OS X 在設計上的傳承。與 Windows 相反（或者說 Windows 有意與 OS X 相反，這裡面又要翻出一堆歷史問題了 ^_^）代表「肯定」的操作位於右邊，「否定」位於左邊。（大多數情況下)( iOS 需要注意按鍵反光的狀態。）

圖 3
OS X 使用者預期所有的按鍵位於 dialog 的右側底部，啟動一個操作的按鍵總是位於最右側。該按鍵稱之為「action button」，以確認當前 dialog 最重要的操作。取消按鍵位於「action button」的左側（圖 3 左）。 （OS X Interface Guidelines，請參考 Dialog 章節。）
iOS 繼承了 OS X 的設計原則（圖 3 右），只是稍稍有些不一樣，像是對於 Cancel（取消）的理解：
當操作涉及潛在的風險時，兩個按鍵中「Cancel」按鍵應位於右側，並反光提示。
當需要引導人們進行所期望的操作時，兩個按鍵中的「Cancel」按應位於左側，相對應的操作按鍵反光提示。
iOS 中「Cancel」可能位於左側，也可能位於右側，這取決於所執行的操作是否具有破壞性。 iOS 平台更看中的是按鍵的反光狀態（iOS反光狀態始終在右側，OS X則不然）。同時在 dialog 彈出的情況下按下 home 鍵，應當是等同於點擊了「Cancel」按鍵，並不執行任何操作。（請參考 iOS Human Interface Guidelines 中的 alert 部分）
Android
Android 平台，這才是最頭痛的家伙，大多數的坑都在這裡。剛出道時，可能是因為當時設計規範執行力道小、Android 系統的碎片化等原因，導致 dialog 內的操作按鍵順序隨著 app 開發者喜好而定，大多數與 Windows 平台保持一致。更新至 Android 4.X 後，官方終於對此有了一個很明確的態度，並在 Android Design 裡有了標準的定義。

圖 4
Dialog 操作按鈕通常是「取消」/「確定」，確定鍵同時也是首選操作以及最可能執行的操作。但是，如果涉及特殊操作例如關閉或等待，那麼所有的按鈕都應該使用動詞。同是，dialog 中代表「肯定」的操作總是安排在右側，而否定的操作放在左側。與 iOS 理念上統一，但也有所保留！^_^（就算是到現在還是能看到大量的 Android app 與該原則相悖，或許是習慣，或許是遷就舊版系統…… Android Design，請參考這裡的的 Dialog 章節。）
聊完了各平台的設計規範，對各平台 dialog 內操作按鍵的順序有所了解，大家知道怎麼去進行設計了，但是身為設計者需要更進一步的思考，有興趣的請繼續往下看。
如果你是一個設計者，在完全沒有設計原則指導的情況下，將如何安排 dialog 內操作按鍵的順序呢？思考一下吧。
以下僅為個人觀點！歡迎大家討論。
我傾向於代表「肯定」的操作位於右邊，否定操作位於左邊，也就是「取消」/「確定」。
「確定」/「取消」，採用這種順序最大的理由是符合自然的閱讀順序，也就是大部分從左起語言的順序。使用者在執行某操作彈出 dialog 後，視線最先接觸的是需要執行的「action」，因為設計者認為「action」重要程度比「cancel」要高，需要著重強調，這裡涉及認知領域的首因效應（Primacy Effect），以後有機會再講吧。（由於是Windows平台所採用的順序，就簡稱為 Windows 順序吧。）
「取消」/「確定」，由於主要是水果平台採用，以下簡稱為 OS X 順序，或者 iOS 順序。說說具體為什麼傾向它的幾個理由：
閱讀視線流
掃視時的閱讀順序
邏輯順序
閱讀視線流，Windows 順序雖然能夠使用者視線更早接觸到「action」，但不可否認一個事實，使用者會閱讀完所有可操作的選項，這意味著使用者的視線不會停留在「action」上，它將繼續向後進行掃描，在查看完所有可選項後，再返回之前的的「action」執行相應操作。採用 iOS 順序，使用者的視線流將會更平滑，視線最終停留的位置也是「action」所處的位置。透過圖 5 對比，可以得知「確定」放置於左側，將導致使用者的視線流發生改變，使用者視線流無意識的回跳，而放於右側將保持視線流在一個方向，減少視線曲折搜尋的過程。

圖 5
掃視時的閱讀順序，有人可能會問了這與前一個理由有什麼區別？閱讀是由掃視（saccades）和凝視（fixation）兩個動作連續組合、切換的過程。第一個的理由基於凝視（fixation）運動過程。
為什麼在 dialog 彈出時會出現掃視？因為，使用者對於 dialog 裡的內容只是快速的瀏覽，或者說是沒有人會認真閱讀 dialog 裡的內容。由此也引申出 dialog 設計時的一個重要原則：不要在 dialog 相關的action按鍵裡寫上「好」或「確定」等，應該用實際會發生的動作來命名。這也是為什麼建議使用動詞的原因。如：你需要執行一個「儲存」操作，那你的 dialog 裡出現的相關 action 應該是「取消」和「儲存」。
說回掃視，使用者的在進行掃視時順序往往如圖 6，最終視覺的落點是在視覺界面的右下角（Terminal Area），掃視終點往往就在「action」區域上，該區域能夠獲得更多的視覺關注。這也是為什麼Windows及OS X桌面系統內的dialog按鍵均非居中顯示，而是位於右下角的原因。古老的Gutenberg Diagram（古藤堡圖表）也是用以描述掃視順序的模型（請參考這裡的資料。注意圖 6 所標出的區域 1，iOS 在右側「action」鍵上加了反光效果，這對視覺搜尋有益。
圖 6
邏輯順序，首先讓我們來對 dialog 內按鍵定義一下，「確定」按鍵是使用者以執行相關操作的按鍵，點擊後將對現有狀態發生根本性的改變。「取消」按鍵是使使用者返回到原來狀態，取消當前 dialog。
這意味著，使用者點擊「action」後將進入下一步操作，點擊「cancel」將執行返回操作。想想我們常見的：瀏覽器上的導航按鍵、kindle 上的左右翻頁按鍵、安排軟體過程當中的「上一步」、「下一步」……等等！
如圖 7，使用者在 dialog 內所看到的視覺順序與邏輯順序是一致的。

圖 7
另外，桌面平台上還考慮到使用者左右手使用習慣，這其實與 dialog 內的邏輯順序也有所關聯。我們知道大部分的人主要是右手使用者，當 dialog 內的「action」位於右側時，使用者在操作時能夠更為順應他們自身的使用習慣。這一點還出現在 Windows 和 OS X 桌面文件排布順序方面，OS X為了大部分的右手使用者將桌面文件分布在螢幕的右側。

圖 8
最後來個結尾，其實視覺順序在設計時，或系統設計時是一條很重要的原則，可惜並沒有太多設計師重視這條原則，舉例說明（圖 9），從下圖中將 Windows 和 OS X 的窗口控制按鍵抽離出來，並將「關閉」替換成「取消」，如果將這些操作放置在一個 dialog 中，有沒有發現它們還是符合這兩個系統分別堅持的設計原則呢？
圖 9
休假後的第一篇，略長、略長…… 囧

