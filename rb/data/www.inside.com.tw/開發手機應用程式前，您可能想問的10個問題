


原作者是瑞典籍的Andreas Sjostrom，他目前主要的工作就是進行手機應用程式開發計劃，他統合10個在工作上最常被問到的10個問題，以及他一般對應的解答，綜觀起來，與筆者的回答有許多相似之處，茲分享如下，灰階部份則是筆者另行補充的部份。同時，您可以在他的個人部落格Bussiness Technology看到更多關於手機應用程式開發思考的文章，多是偏向實務上的相關，有興趣者不妨一看。
1. 我們目標應該是哪個平台？
只有iOS (iPhone and iPad) 以及Android有足夠的下載量、購買量以及使用量。其他平台也都有應用程式，但使用者大部份都太少，或者應用程式的下載量都不足以支撐。也許未來可能會改變，但是以今日來說，這是不爭的事實。
也許有人會爭辯WP、Bada都可撐起一片江山，但在沒有真切的放大量出來，不會建議一下子就冒進。
2. 我們需要針對不同平台來開發不同的應用程式，或者是說有跨平台一次解決的框架？
是的，你需要針對不同的平台開發不同的原生性應用程式。在市面上的確有許多的跨平台解決方案，但沒有一個是夠強大的，這些方案裡包含了Sencha、SproutCore、Titanium。
長期來說，HTML 5將會擁有最強的產業支援並提供很棒的框架給應用程式開發。但這在接下來的18個月並不會發生。請記得一件最重要的事，一個iPhone應用程式必須看起來並使用起來像是一個iPhone應用程式；而Android應用程式必需像是一個Android應用程式；如果想要跨平台，先確保你要先知道原生應用程式的樣子，才不會犧牲掉使用者經驗。
我也認為HTML5終將會引領潮流，但整體應用與接受並不是迫在眉睫。是不是利用HTML 5跨平台或者使用原生應用程式，都不是重點，重點是在於使用者經驗。
過去一年的經驗裡，不管是Foursquare、Viber、Instagram都已經作出最好的證明，他們都是以單一平台成功立基，強調單一平台「使用者經驗」成功；如果只想一次搞定多平台，但卻忽略在各平台裡使用經驗的差異，就已經是失敗的開始。
3. 每增加另一個平台，我們所需要多花費的開發時間會多上多久？
這需視你開發的應用程式類型是哪種，但一般來說，大概是30～50%的時間。
4. 有可能在內部佈署應用程式，而不用透過公開的應用程式商店嗎？
是的，每個平台都有不同的解決方案，而且相當常見。
以筆者較為熟悉的iOS來說，一般做法可以使用 iOS Developer Enterprise Program，而當然，Adhoc Distribution也是另一種解法。
5. 我們可以再利用在網站已經完成的系統介接嗎？
是的，應用程式應該盡可能利用現成的系統，通常在JSON的架構上，是不用再疊床架屋的。
6. iPhone 以及 Android 的學習曲線對比上，Objective C 會比 Java難學？
這跟語言無關，這跟你鎖定SDK有關(Cocoa Touch 或 Android SDK)，學習曲線差不多。
7. 可以透過應用程式賣東西嗎？金流怎麼走？
可以的，以iPhone來說，Apple不會讓詢問使用者的信用卡號，如果你選擇使用蘋果的帳號，蘋果會取走30%的手續費，大部份的線上零售業者會選擇讓使用者先建立一個使用者帳號，然後讓他們透過應用程式登入，這個帳號可以用來開收據/登入信用卡帳號。這限制不存在Android應用程式上。
8. 為什麼不是一個網站，然後可以做一個適應手機瀏覽器的版本？
應用程式為主的手機使用者，偏好透過使用應用程式的功能來消費內容，IDG的數據支持此一觀點，並顯示應用程式驅動8倍於手機網站的流量。
就如同知名的LBS服務GoWalla CEO指出，使用者「壓倒性」使用的就是原生性應用程式。在「強大」的html 5普及前（這包含了開發人力的普及以及所有網路服務的轉向），手機瀏覽器版本只能說是一個暫時解藥，比沒有好一些的方式。
9. App專案通常怎麼運作？
就像所有的軟體開發專案：目的/用途、願景、草圖、視覺化、設計、開發，測試以及上線。我們喜歡類似Scrum的開發方式，應用程式專案特別專注在使用者經驗以及介面上的設計。
10. 通常一般的公司都從哪一類型的應用程式開始著手？
一般都從他們網站上的既有功能開始著手，並開始加上應用程式屬性的功能（像是GPS定位以及攝影）





 Tagged with: app, 開發 
