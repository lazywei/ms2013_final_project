

(image credit: Flickr)
網路創業、車庫創業的傳奇故事非常多，現在全球最熱門的社群網站Facebook、Google搜尋引擎，當初都是一兩個人利用個人電腦寫出來的。軟體產業的特色在於通常你只要依賴你我都擁有的電腦，就可以創造出有趣、實用的服務，進而改變世界。
想利用網路服務、手機App改變世界的第一步應該是要先有能力實踐出你的想法，不要因為你過去的學歷不是資訊相關科系，或目前的工作不是程式設計師、工程師，就排斥寫程式或是學會程式運作的原理。
半路出家也可以有卓越表現
Inside上有一篇我想離職，學寫程式就曾經提過一個礦工在決定改變自己的生活後，從做網頁學起，到後來他已經有能力自己開發資料庫應用、營運電子商務網站。
知名部落客、同時也是appWorks創辦人 Mr. Jamie 過去也不是資訊相關科系，不過某一次我到 appWorks 拜訪時 Jamie 就跟我說他正在寫 Ruby on Rails 的程式，還說有機會想要跟另一位網路名人、Ruby on Rails 高手  Xdite 交流、請教。
另外一個好例子，我有一位正在創業的朋友  Ben，台灣人，17歲高中輟學、過去的背景是製造業機構工程師，一直到 2008 年決定要追求夢想，選擇從一個他過去完全陌生的戰場，也就是網路，開始他的夢想之路。
他跟上面提到的礦工一樣，從HTML、CSS開始學習，到後來開始學習 JavaScript，再一直到開始寫 PHP、建立 MVC 的概念、接觸版本控制系統、處理跨瀏覽器的各種問題，到後來為了建立強大、好用的使用者介面，開始自己撰寫 JavaScript 的框架來滿足前端的程式需求。（對 Ben 的故事有興趣的可以看這）
Ben 在他的自我介紹上寫著：
相信自己，沒有不可能！
開始學寫程式
因此，如果你想著改變生活、創業、做出一個驚人的好服務，或許你可以認真考慮自己學寫程式。學寫程式分很多種程度，你不見到要自己處理一切的問題，至少你學習的過程可以有助於你跟潛在的技術合作夥伴進行更良好的溝通。你可以看看 Inside  另外這幾篇文章：
我想離職，學寫程式（上）
我想離職，學寫程式（下）
同時，你一定要看看另篇文章，從Inside的第1,000篇文章看台灣網路產業的未來1,000天，當你決定開始學寫程式的那一刻開始，你或許就是未來幾年後有機會改變世界的那個人了。
不要懷疑自己的能力不夠或是點子不好，這篇文章裡面也提到了：
Facebook跟Twitter之後，下一個熱門網站會是什麼？為什麼？
得到最多人認同的答案是：
下一個熱門網站不會從育成中心出現
下一個熱門網站不會跟現在在技術會議中講話的人有關
下一個熱門網站不會在Quora上被討論，除非已經很明顯已經熱門了。
下一個熱門網站不會由現任專家做出來。
下一個熱門網站會由一個不知名的小伙子，在某個例如車庫的鳥地方做出來。
換句話說，你自己不嘗試的話你也不知道。
簡單的事情每天都做就不簡單
我曾經在另篇文章想成為素人明星，你可以從現在開始努力的三件事提過，素人想要成為明日之星、成功的創業者，這三件事你應該記住：
持續閱讀、持續吸收產業新知
持續有所產出
持續強化網絡關係
如果你是一個想要離職、學寫程式並且走上創業之路的素人，要做的事情也不外乎這幾個重點，你應該每天都讀點書、了解網路產業的趨勢發展、好的開發工具的發展狀況，每天都打開你的程式編輯器寫一點程式，並且持續的跟網路上的前輩們請教。
決定開始了，應該練習哪些點子呢？
今天在我非常喜歡的網路資訊來源Hacker News上看到一篇很棒的文章「10 Ideas for Beginner Web Developers」，裡面提供了10個從入門到稍微進階一點的點子，在此提供給你參考：
簡單的部落格，每篇文章底下要有留言功能
讓網友張貼程式碼的網站，要有產生短網址的功能
一個列出待辦清單的網站（Todo list）
幫第一個、第二個點子加上使用者註冊、登入驗證等功能
做一個網站，可以透過這個網站以及 Twilio 這個網路服務發個簡訊給你自己
做一個網站，可以讓使用者上傳檔案，檔案上傳之後會存到Amazon S3的雲端儲存空間
第三個點子，Todo list 加上Ajax。同時也加上使用者註冊、登入驗證，以及發信提醒使用者尚有待辦事項的功能
建立你自己的 JSON 及 XML API，看是要幫 Todo list 加上 API 還是其他網站
利用你自己建立的 API，再將你自己的 API 包成可以直接提供給其他開發者使用的函式庫（原文案例是使用 Ruby 語言，所以是包成一個 Ruby gem）
做到這個階段，你應該有辦法自己想出一個真正想做的點子了。如果還沒有，不如做個記帳軟體，要能呈現圖表 & 將記帳的內容輸出成 CSV 檔案
這每個點子背後都有其意義，包括讓你掌握最基本的程式運作原理、網頁運作方式，或是自行建立 API 來讓自己的團隊、外部團隊可以透過 API 來交流資料，甚至是你可以自己以這樣的方式開發出一個與 Mobile Apps 搭配的網路服務（如果你想做一個 Foursquare 及類似的簽到、打卡服務，或是像 Instagram 這樣的有趣拍照軟體，基本架構就是如此）。
當然，在你什麼都還不懂的情況下，每一個點子本身都是一個龐大的挑戰，但如果你遲遲沒有開始，我相信你三年後還是一行程式都不會寫。先試著把第一個案例完成，我建議你可以使用 Ruby on Rails + MySQL 作為開始，Ruby on Rails 是一個非常優秀的網頁開發框架，Mr. Jamie 自己沒事練功也是在玩這套（他還跟我說他的練習點子是做一個 Twitter 出來，你也可以參考參考）。
Ruby on Rails 目前有國內非常優秀的一位 Ruby 社群前輩，iHower ，他正在撰寫一本 Ruby on Rails 實戰聖經，內容非常詳盡，目前是開放線上閱讀的：
Ruby on Rails  實戰聖經
註：iHower 同時也是 Ruby Taiwan 社群的發起人，你可以參考 Ruby Taiwan 網站來獲取社群最新活動訊息，社群裡有非常多厲害而且熱心的前輩可以提供一些指導與經驗分享
學 Ruby 程式語言如何？
至於 Ruby 這個語言，或許大部分的人聽過的是 PHP、JAVA、C#、C/C++等語言，對 Ruby 比較陌生一點。Ruby 是一個由日本人松本行弘在 1995 年發展出來的程式語言，換句話說， Ruby 語言的年紀與 JAVA 幾乎是一樣老的。而 Ruby 過去一直以來只有在日本比較受歡迎，一直到 2004 年有個高手利用 Ruby 打造了 Ruby on Rails 這個網頁框架之後，相關的社群也隨之漸漸發展起來，才會到現在有比較高的能見度。
目前 Ruby 以及 Ruby on Rails 也有非常優秀的雲端服務提供廠商：Heroku，在這篇介紹文章中提到：
你的網站是否曾經遇過下列狀況？
面對突如其來的流量，主機一時承受不了便導致服務中斷、當機，錯失許多寶貴的商機。
為了應付各種可能的狀況，公司幫你的部門準備了很好的機器，但平常使用率極低
已經預料到下個月要進行的行銷活動將會帶來大量訪客，但卻無計可施，到底是要從程式優化做起還是調整架構、採購設備做起？
涉及採購的話又要看有沒有預算，即使有預算，為了一次活動添購機器，結束後機器使用率是非常低的，不如把這些錢當成IT人員的績效獎金。

其實這是所有網站經營者都會遇到的問題，換句話說，Heroku可以讓你只需要專心寫好應用程式，不用花太多心思在伺服器管理。再加上去年，Salesforce.com收購雲端服務提供商Heroku：宣告Java與Ruby才是「雲端2.0語言」，今天 Heroku 又公布他們挖角到了 Ruby 之父，也就是當年發展出 Ruby 語言的松本行弘加入 Heroku，顯現 Ruby 語言與相關的資源將會更加值得信賴與投資。你肯定是可以認真思考學習 Ruby 語言來做為寫程式的第一步的。
結語
我還記得，以前我在網頁程式寫作的經驗其實是非常少的，加上我在大學時期是一個從國際貿易學系轉到資訊管理學系的學生，半路出家加上程式設計並非隸屬商學院的資管系的學習重點，撰寫網頁程式的能力幾乎是自己藉由各種拼拼湊湊出來的經驗才慢慢累積的。
當時我剛接觸 Ruby on Rails，我也是自己想定了一個主題來練功，這個網站的流量一度達到一個月 1,000 萬個 pageviews，在 Alexa 上的台灣排名一度衝到台灣的 550 名，那是我當年想都沒想過的好成績，也改變了在那之後我在職涯上的規劃與發展。在那之前，我根本沒想過如何寫出好的網頁程式，但一直到現在，我透過持續的學習、累積（感謝網路上許多前輩的分享與指教），我漸漸也學到了一些比較好的程式技巧。
因此，如果你對於網頁程式設計有任何問題，也歡迎到 Inside  論壇上進行交流討論。
我認真的期待下一個卓越的網路服務可以從Inside讀者群中誕生，並且有機會能讓我們進行專訪 :p
歡迎追蹤我的 Google+

